---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: {{ template "app.name" . }}
    chart: {{ template "app.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "app.fullname" . }}
spec:
  replicas: {{ .Values.statefulSet.replicas }}
  selector:
    matchLabels:
      app: {{ template "app.name" . }}
  template:
    metadata:
      labels:
        app: {{ template "app.name" . }}
    spec:
      containers:
        - name: {{ template "app.name" . }}
          args:
{{- with .Values.factomd -}}
{{- $factomd := . -}}
{{- $merged := merge .overrides.args .args.defaults.global (index .args.defaults .network) -}}
{{- range $key, $value := $merged }}
{{- if $value }}
{{ printf "- \"-%s=%s\"" (include "factomd.argKey" (dict "factomd" $factomd "key" $key)) (toString $value) | indent 12 -}}
{{ end -}}
{{- end -}}
{{- end }}
        image: {{ .Values.container.image }}:{{ .Values.container.imageTag }}
        livenessProbe:
          tcpSocket:
            port: {{ include "factomd.configValue" (dict "factomd" .Values.factomd "key" "p2pPort") }}
          initialDelaySeconds: 120
          periodSeconds: 10
        ports:
          - containerPort: {{ include "factomd.configValue" (dict "factomd" .Values.factomd "key" "apiPort") }}
            name: api
            protocol: TCP
          - containerPort: {{ include "factomd.configValue" (dict "factomd" .Values.factomd "key" "controlPanelPort") }}
            name: control-panel
            protocol: TCP
          - containerPort: {{ include "factomd.configValue" (dict "factomd" .Values.factomd "key" "p2pPort") }}
            name: p2p
            protocol: TCP
        readinessProbe:
          tcpSocket:
            port: {{ include "factomd.configValue" (dict "factomd" .Values.factomd "key" "p2pPort") }}
          initialDelaySeconds: 120
          periodSeconds: 10
        resources:
{{ toYaml .Values.container.resources | indent 10 }}
        volumeMounts:
          - name: factomd-database
            mountPath: /root/.factom/m2
          - name: factomd-config
            mountPath: /root/.factom/private
      volumes:
      - name: factomd-config
        configMap:
          name: {{ template "app.fullname" . }}-factomd-config
  volumeClaimTemplates:
  - metadata:
      name: factomd-database
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.persistentVolumeClaim.size }}
      storageClassName: {{ template "app.fullname" . }}-storageclass
...
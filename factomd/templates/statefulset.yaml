{{- $f := .Values.factomd }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: {{ template "app.name" . }}
    chart: {{ template "app.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "app.fullname" . }}-ss
spec:
  replicas: {{ .Values.statefulSet.replicas }}
  selector:
    matchLabels:
      app: {{ template "app.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "app.name" . }}
        chart: {{ template "app.chart" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ template "app.name" . }}
        args:
{{- $merged := merge $f.args $f._args.defaults.global (index $f._args.defaults $f.network) }}
{{- range $key, $value := $merged }}
{{- if $value | kindOf | eq "invalid" | not }}
{{- $argName := include "factomd.argKey" (dict "factomd" $f "key" $key) }}
{{ printf "- \"-%s=%s\"" $argName (toString $value) | indent 8 }}
{{- end }}
{{- end }}
{{- $publicKey := include "factomd.configValue" (dict "factomd" $f "key" "localServerPublicKey" "allowEmpty" true) -}}
{{- if $publicKey }}
        env:
        - name: LOCAL_SERVER_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secret
              key: localServerPrivateKey
{{- end }}
        image: {{ .Values.container.image }}:{{ .Values.container.imageTag }}
        livenessProbe:
          exec:
            command:
              - pgrep
              - factomd
            initialDelaySeconds: 60
            timeoutSeconds: 5
        ports:
{{- range $service := .Values.services }}
        - containerPort: {{ include "factomd.configValue" (dict "factomd" $.Values.factomd "key" $service.configPortName) }}
          name: {{ $service.name }}
          protocol: TCP
{{- end }}
        readinessProbe:
          exec:
            command:
              - pgrep
              - factomd
            initialDelaySeconds: 5
            timeoutSeconds: 5
        resources:
{{ toYaml .Values.container.resources | indent 10 }}
        volumeMounts:
        - name: factomd-database
          mountPath: /home/factomd/.factom/m2
        - name: factomd-config
          mountPath: /home/factomd/.factom/private
      securityContext:
        fsGroup: 1000
      volumes:
      - name: factomd-config
        configMap:
          name: {{ template "app.fullname" . }}-cfg
  volumeClaimTemplates:
  - metadata:
      name: factomd-database
      labels:
        app: {{ template "app.name" . }}
        chart: {{ template "app.chart" . }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.persistentVolumeClaim.size }}
      storageClassName: {{ template "app.fullname" . }}-sc
...